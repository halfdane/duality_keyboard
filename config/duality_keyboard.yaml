##########################################
###
###     Given conditions:
###     - Each veneer sheet is 0.5mm thick
###     - Initial tests show that single veneer sheets aren't stable enough so before cutting, 
###         so each layer consists of two sheets glued  together
###
###     - Height of USB-hole: 3mm (3 layers)
###     - Height/width of halves'/mouse connectors holes: 5mm/10mm (5 layers)
###     - M2-Screws and inlets
###     - Kailh choc switches
###     - Keycaps are 17mmx16mm
###     - Keycaps are NOT 18mmx18mm as usual!!
###     - Rubber bumpers are 4mm radius
###     - Magnets have 5mm radius and almost 2mm thickness (2 layers)
###     - Cirque Trackpad 40 - 39mm overlay / 41mm overlay lip
###       Case needs a bit space around, so maybe 43mm in total?
###       => 19.5mm overlay hole radius
###       => 20.5mm overlay lip hole radius
###       => 21.5mm outer casing radius
###
##########################################

units:
  # MY KEYCAPS: 17.5mmx16.5mm
  # cx and cy:  18.0mmx17.0mm for kailh choc
  kx: cx
  ky: cy
  # with padding
  px: kx + 1
  py: ky + 1

  # size of holes in switch plate - a bit smaller to account for laser kerf
  sh: 13.9

  rp2040_body_width: 23.5
  rp2040_body_height: 18

  thumb_rotation: -8
  pinky_rotation: 8

  m2_screw_radius: 1
  m2_head_radius: 1.8
  m2_inlet_radius: 1.5
  m2_outer_distance: 3

  rubber_bumper_radius: 4

  magnet_radius: 5.1

  symbols_radius_recess: 4
  symbols_radius_piece: 4.15

  base_width: 107
  base_height: 85

  middle_stagger: 0.7ky
  
  keyboard_tl_x: 0.5*base_width - rp2040_body_width + m2_outer_distance-1
  keyboard_tl_y: 0.5*base_height - middle_stagger-1

  connector_width: 10
  connector_length: 6
  
  cirque_case_radius: 21.5

points:
  zones:      
    symbol.anchor:
      shift: [(rp2040_body_width + m2_outer_distance)/2, -base_height/2-middle_stagger+m2_outer_distance]
    keyboard_tl.anchor:
      shift: [keyboard_tl_x, keyboard_tl_y]

    matrix:
      key:
        padding: 1ky
        spread: 1kx

      columns:
        pinky.key.splay: pinky_rotation
        ring.key.splay: -pinky_rotation
        ring.key.stagger: middle_stagger
        middle.key.stagger: 0.5ky
        index.key.stagger: -0.25ky
        inner.key.stagger: -0.25ky
      rows:
        bottom:
        home: 
        top: 
    thumb:
      anchor:
        ref: matrix_inner_bottom
        shift: [-6.5, -18]
        rotate: thumb_rotation
      columns:

        middle:
          key.name: thumb_middle
          key.origin: [-0.5U, -0.3U]
        reachy:
          key.name: thumb_reachy
          key.origin: [-0.5U, -0.3U]

outlines:
  _base:
    - what: rectangle
      size: [base_width, base_height]
      corner: 1
      where:
        ref: keyboard_tl
  
  ### holes for magnets to hold the two sides together when transporting
  _magnet_hole_top_left:
    - what: circle
      radius: magnet_radius
      where:
        shift: [-base_width/2+magnet_radius+m2_outer_distance, base_height/2-magnet_radius-(m2_outer_distance*2/3)]
        ref: keyboard_tl
  _magnet_hole_top_right:
    - what: circle
      radius: magnet_radius
      where:
        shift: [base_width/2-magnet_radius-m2_outer_distance, base_height/2-magnet_radius-(m2_outer_distance*2/3)]
        ref: keyboard_tl
  _magnet_hole_bottom_left:
    - what: circle
      radius: magnet_radius
      where:
        shift: [-base_width/2+magnet_radius+m2_outer_distance/2, -base_height/2+magnet_radius+(m2_outer_distance*2/3)]
        ref: keyboard_tl
  _magnet_holes: [
    _magnet_hole_top_left,
    _magnet_hole_top_right,
    _magnet_hole_bottom_left,
  ]

  ### holes&inlets for m2 screws 
  _screw_tl:
    - what: circle
      radius: m2_screw_radius
      where: 
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _head_tl:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _inlet_tl:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _screw_tr:
    - what: circle
      radius: m2_screw_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _head_tr:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _inlet_tr:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _screw_thumb_top:
    - what: circle
      radius: m2_screw_radius
      where:
        shift: [base_width/2-(m2_outer_distance/2), -base_height/2+1.2py]
        ref: keyboard_tl
  _head_thumb_top:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [base_width/2-(m2_outer_distance/2), -base_height/2+1.2py]
        ref: keyboard_tl
  _inlet_thumb_top:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [base_width/2-(m2_outer_distance/2), -base_height/2+1.2py]
        ref: keyboard_tl
  _screw_thumb_bottom:
    - what: circle
      radius: m2_screw_radius
      where:
        shift: [base_width/3+m2_head_radius+2.5, -base_height/2+m2_head_radius+(m2_outer_distance/2)-3]
        ref: keyboard_tl
  _head_thumb_bottom:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [base_width/3+m2_head_radius+2.5, -base_height/2+m2_head_radius+(m2_outer_distance/2)-3]
        ref: keyboard_tl
  _inlet_thumb_bottom:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [base_width/3+m2_head_radius+2.5, -base_height/2+m2_head_radius+(m2_outer_distance/2)-3]
        ref: keyboard_tl
  _screw_bl:
    - what: circle
      radius: m2_screw_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _head_bl:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _inlet_bl:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _screw_holes: [
    _screw_tl,
    _screw_tr,
    _screw_thumb_top,
    _screw_thumb_bottom,
    _screw_bl,
  ]
  _screw_heads: [
    _head_tl,
    _head_tr,
    _head_thumb_top,
    _head_thumb_bottom,
    _head_bl,
  ]
  _inlet_holes: [
    _inlet_tl,
    _inlet_tr,
    _inlet_thumb_top,
    _inlet_thumb_bottom,
    _inlet_bl,
  ]
        
  ### rp2040 needs a place
  _rp2040_body:
    - what: rectangle
      size: [rp2040_body_width, rp2040_body_height+2]
      where:
        ref: keyboard_tl
        shift: [-base_width/2+rp2040_body_width/2+m2_outer_distance*2/3, base_height/2-rp2040_body_height+2]
    - what: rectangle
      size: [1, 13]
      where:
        ref: keyboard_tl
        shift: [-base_width/2+rp2040_body_width+2.1, base_height/2-rp2040_body_height+2]

  _rp2040_usb:
    - what: rectangle
      size: [8, 9.5]
      where:
        ref: keyboard_tl
        shift: [-base_width/2, base_height/2-rp2040_body_height+2]
  _rp2040: [
    _rp2040_body,
    _rp2040_usb
  ]

  ### connectors to touchpad or between halves
  _connector_hole:
    - what: rectangle
      size: [connector_width, connector_length+4]
      where:
        shift: [0, 1]
    - what: rectangle
      size: [connector_width-1, connector_length+8]
      where:
        shift: [0, -(connector_length+8)/2]
  _connector_hole_tt:
    - what: outline
      name: _connector_hole
      where:
        ref: keyboard_tl
        shift: [base_width/2-cx, base_height/2-3]
  _connector_hole_bt:
    - what: outline
      name: _connector_hole
      where:
        ref: keyboard_tl
        shift: [cx-5, -base_height/2+3-0.001]
      adjust.rotate: 180
    - what: rectangle
      size: [connector_width/2+1, connector_length+2]
      where:
        ref: keyboard_tl
        shift: [cx-3, -base_height/2+19]
  _connector_holes: [
    _connector_hole_bt,
    _connector_hole_tt
  ]
  
  ### symbol
  _symbol_recess:
    - what: circle
      radius: symbols_radius_recess
      where:
        shift: [0, 0]
    - what: circle
      radius: symbols_radius_recess
      where:
        shift: [12, 0]
    - what: circle
      radius: symbols_radius_recess
      where:
        shift: [6, 10.3]
    - what: polygon
      operation: subtract
      points:
        - shift: [0,0]
        - shift: [12, 0]
        - shift: [-6, 10.3]

  symbol_pieces:
    - what: circle # left
      radius: symbols_radius_piece
      where:
        shift: [0, 0]
    - what: circle # right
      radius: symbols_radius_piece+0.05
      where:
        shift: [12, 0]
    - what: circle # top
      radius: symbols_radius_piece+0.1
      where:
        shift: [6, 10.3]
    - what: polygon # triangle
      operation: subtract
      points:
        - shift: [0,0]
        - shift: [12, 0]
        - shift: [-6, 10.3]

  
  _touchpad_case:
    - what: circle
      radius: cirque_case_radius
      where:
        ref: keyboard_tl
        shift: [1, -base_height/2-5]
  _magnet_touchpad:
    - what: circle
      radius: magnet_radius
      where:
        ref: keyboard_tl
        shift: [1, -base_height/2+cirque_case_radius/2-1]

  ### parts that are used on different layers
  _rubber_bumper_tl:
    - what: circle
      radius: rubber_bumper_radius
      where: 
        shift: [-base_width/2+m2_head_radius+m2_outer_distance+rubber_bumper_radius, base_height/2-m2_head_radius-m2_outer_distance-rubber_bumper_radius]
        ref: keyboard_tl
  _rubber_bumper_tr:
    - what: circle
      radius: rubber_bumper_radius
      where:
        shift: [base_width/2-m2_head_radius-m2_outer_distance-rubber_bumper_radius, base_height/2-m2_head_radius-m2_outer_distance-rubber_bumper_radius]
        ref: keyboard_tl
  _rubber_bumper_bl:
    - what: circle
      radius: rubber_bumper_radius
      where:
        shift: [-base_width/2+m2_head_radius+m2_outer_distance+rubber_bumper_radius, -base_height/2+m2_head_radius+m2_outer_distance+rubber_bumper_radius]
        ref: keyboard_tl
  _rubber_bumper_br:
    - what: circle
      radius: rubber_bumper_radius
      where:
        shift: [base_width/2, -base_height/2+rubber_bumper_radius+1.5]
        ref: keyboard_tl
  _rubber_bumpers: [
    _rubber_bumper_tl,
    _rubber_bumper_tr,
    _rubber_bumper_bl,
    _rubber_bumper_br
  ]

  ### switch plate
  _key_holes:
    - what: rectangle
      where: /^matrix_.*|^thumb_.*/
      size: sh

  _with_fillets:
    - what: rectangle
      size: [3U, 1.2U]
      corner: 1
      where:
        ref: thumb_reachy
        shift: [-0.9U, 0]
    - what: rectangle
      size: 1.8px
      corner: 1
      where:
        ref: thumb_reachy
        shift: [-6.3, py]
    - what: circle
      radius: 2.1px
      operation: subtract
      where:
        ref: thumb_reachy
        shift: [2px-0.5, 2.3py]
    - what: outline
      name: _base


  ### frame around keycaps on top of switchplate
  _switch_caps:
    - what: rectangle
      # operation: stack
      where: /^matrix_.*/
      size: [px, py]
    - what: rectangle
      # operation: stack
      where: /^thumb_.*/
      size: [px+2, py+10]
      adjust.shift: [1, 0]
  

  _bottom_hollow:
    - what: rectangle
      fillet: 2
      where: /^matrix_.*/
      size: [kx, ky]
    - what: rectangle
      fillet: 2
      where: /^thumb_.*/
      size: sh
    - what: rectangle
      size: [5, 8]
      where:
        ref: keyboard_tl
        shift: [-26, 23.25]
    - what: rectangle
      size: [8, 5]
      where:
        ref: thumb_reachy
        shift: [-10, 3]
    - what: rectangle
      size: [5, 8]
      where:
        ref: thumb_reachy
        shift: [-18, 9]
      

##########################################
###   Two sheets of veneer must be glued together before cutting, so each "layer" consists of two sheets of veneer
###
###     The actual Layers ordered from bottom to top:
###     - 2 layers of bottom plate that can be screwed on and off (one with voronoi pattern, one in walnut wood)
###     - 5 layers of bottom hollow that holds wiring, connectors etc
###     - 4 layers of switch plate
###     - 8 layers of top cap that hold rp2040, magnets and inlay
###
###   Gluing order:
###     - the two switch plates
###     - the bottom plates
###     - bottom hollow to the switch plate
###     - glue the two topmost layers
###     - glue the top cap to the switch plate
###     - glue two topmost layers to the rest
###
###   Gluing help (use test cuts):
###     - 4x a switch plate or layer_02 - everything but top cap
###     - 2x layer_30 - for the top cap stuff
###
###   Test cut with cheap wood: TBD
###
##########################################

  ## bottom plate consists of two layers: 
  ## 01: the voronoi pattern with big holes for the screw heads and the rubber bumpers
  ## 02: a blank outline (using walnut wood) - maybe with space invaders inlay?
  ## Layer 01 has larger holes to accomodate the screw heads, the other layers'
  ##   holes are just large enough to the screws can fit through

  _key_pattern:
    - what: circle
      where: /^matrix_.*|^thumb_.*/
      radius: 01
  key_pattern: [
    _with_fillets,
    -_key_pattern,
    -_screw_heads,
    -_rubber_bumpers
  ]
  layer_01: [
    _with_fillets,
    -_screw_heads,
    -_rubber_bumpers
  ]
  layer_02: [
    _with_fillets,
    -_screw_holes
  ]

  ## body below the keyplate: 
  ##  to clear the lower part of the keys, it needs to be at least 5mm which is the same
  ##  height as the halves'/mouse connectors.
  ## So that's 4 layers in total  ##
  ## 03-06: bottom hollow 
  ##    - with connector holes (==4 Layers - missing space is cleared by the first switch plate layer)
  ##    - with magnet holes -> double up the magnets for more holding power

  layer_03_to_06: [
    _with_fillets,
    -_bottom_hollow,
    -_rp2040_body,
    -_inlet_holes,
    -_connector_holes,
    -_magnet_touchpad
  ]

  ## switch plate consists of four layers - goal is a total of 1.5mm for the 
  ##    switch plate, and each layer is 1mm. So there's possibly manual adjustment necessary
  ##    First layer has space for connectors:
  ## 07: switch plate with holes for halves'/mouse connectors
  ## 08: switch plate
  
  layer_07: [
    _with_fillets,
    -_key_holes,
    -_rp2040,
    -_inlet_holes,
    -_connector_holes,
    -_magnet_touchpad
  ]
  layer_08: [
    _with_fillets,
    -_key_holes,
    -_rp2040,
  ]

  ## body above the keyplate: 
  ##    - to clear the keycaps (7.5-8 mm above switch plate), 8 layers are needed in total:
  ##    - 5 layers with holes for magnets
  ##    - 1 layer to cover the magnets and have something to glue the inlay to
  ##    - 1 single veneer holds the inlay
  ## Think about possibilities to reduce the two topmost layers (==4 sheets of veneer) to one (==2 sheets of veneer)
  ## That allows to triple up the magnets for superior holding power
  ##
  ## 09 10 11 12 13: top frame with magnet holes
  ## 14: top layer without any holes
  ## 15: top layer with inlay
  layer_09_to_13: [
    _with_fillets,
    -_switch_caps,
    -_touchpad_case,
    -_magnet_holes
  ]

  layer_14:
    - what: outline
      name: _with_fillets
    - what: outline
      name: _switch_caps
      operation: subtract
    - what: outline
      name: _touchpad_case
      operation: subtract

  layer_15:
    - what: outline
      name: _with_fillets
    - what: outline
      name: _switch_caps
      operation: subtract
    - what: outline
      name: _symbol_recess
      operation: subtract
      origin: symbol
    - what: outline
      name: _touchpad_case
      operation: subtract
    

