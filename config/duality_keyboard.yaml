units:
  # MY KEYCAPS: 17.5mmx16.5mm
  # cx and cy:  18.0mmx17.0mm for kailh choc
  kx: cx
  ky: cy
  # with padding
  px: kx + 1
  py: ky + 1

  rp2040_body_width: 23.5
  rp2040_body_height: 18

  thumb_rotation: -8
  pinky_rotation: 8

  m2_screw_radius: 1
  m2_head_radius: 1.8
  m2_inlet_radius: 1.5
  m2_outer_distance: 2.5

  rubber_bumper_radius: 4

  magnet_radius: 4.1

  symbols_radius: 4

  base_width: 105
  base_height: 80

  middle_stagger: 0.7ky
  
  keyboard_tl_x: 0.5*base_width - rp2040_body_width + m2_outer_distance
  keyboard_tl_y: 0.5*base_height - middle_stagger

  connector_width: 10
  connector_length: 6
  

points:
  zones:      
    symbol.anchor:
      shift: [(rp2040_body_width + m2_outer_distance)/2, -base_height/2-middle_stagger+m2_outer_distance]
    keyboard_tl.anchor:
      shift: [keyboard_tl_x, keyboard_tl_y]

    matrix:
      key:
        padding: 1ky
        spread: 1kx

      columns:
        pinky.key.splay: pinky_rotation
        ring.key.splay: -pinky_rotation
        ring.key.stagger: middle_stagger
        middle.key.stagger: 0.5ky
        index.key.stagger: -0.25ky
        inner.key.stagger: -0.25ky
      rows:
        bottom:
        home: 
        top: 
    thumb:
      anchor:
        ref: matrix_inner_bottom
        shift: [-6.5, -18]
        rotate: thumb_rotation
      columns:

        middle:
          key.name: thumb_middle
          key.origin: [-0.5U, -0.3U]
        reachy:
          key.name: thumb_reachy
          key.origin: [-0.5U, -0.3U]

outlines:
  _base:
    - what: rectangle
      size: [base_width, base_height]
      corner: 1
      where:
        ref: keyboard_tl
  
  ### holes for magnets to hold the two sides together when transporting
  _magnet_hole_top_left:
    - what: circle
      radius: magnet_radius
      where:
        shift: [-base_width/2+magnet_radius+(m2_outer_distance*2.5)+rp2040_body_width, base_height/2-magnet_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _magnet_hole_top_right:
    - what: circle
      radius: magnet_radius
      where:
        shift: [base_width/2-magnet_radius-(m2_outer_distance/2), base_height/2-magnet_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _magnet_hole_bottom_left:
    - what: circle
      radius: magnet_radius
      where:
        shift: [-base_width/2+magnet_radius+(m2_outer_distance/2), -base_height/2+magnet_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _magnet_holes: [
    _magnet_hole_top_left,
    _magnet_hole_top_right,
    _magnet_hole_bottom_left,
  ]

  ### holes&inlets for m2 screws 
  _screw_tl:
    - what: circle
      radius: m2_screw_radius
      where: 
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _head_tl:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _inlet_tl:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _screw_tr:
    - what: circle
      radius: m2_screw_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _head_tr:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _inlet_tr:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), base_height/2-m2_head_radius-(m2_outer_distance/2)]
        ref: keyboard_tl
  _screw_thumb_top:
    - what: circle
      radius: m2_screw_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), -base_height*0.3]
        ref: keyboard_tl
  _head_thumb_top:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), -base_height*0.3]
        ref: keyboard_tl
  _inlet_thumb_top:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [base_width/2-m2_head_radius-(m2_outer_distance/2), -base_height*0.3]
        ref: keyboard_tl
  _screw_thumb_bottom:
    - what: circle
      radius: m2_screw_radius
      where:
        shift: [base_width/3+m2_head_radius+4, -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _head_thumb_bottom:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [base_width/3+m2_head_radius+4, -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _inlet_thumb_bottom:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [base_width/3+m2_head_radius+4, -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _screw_bl:
    - what: circle
      radius: m2_screw_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _head_bl:
    - what: circle
      radius: m2_head_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _inlet_bl:
    - what: circle
      radius: m2_inlet_radius
      where:
        shift: [-base_width/2+m2_head_radius+(m2_outer_distance/2), -base_height/2+m2_head_radius+(m2_outer_distance/2)]
        ref: keyboard_tl
  _screw_holes: [
    _screw_tl,
    _screw_tr,
    _screw_thumb_top,
    _screw_thumb_bottom,
    _screw_bl,
  ]
  _screw_heads: [
    _head_tl,
    _head_tr,
    _head_thumb_top,
    _head_thumb_bottom,
    _head_bl,
  ]
  _inlet_holes: [
    _inlet_tl,
    _inlet_tr,
    _inlet_thumb_top,
    _inlet_thumb_bottom,
    _inlet_bl,
  ]
        
  ### rp2040 needs a place
  _rp2040_body:
    - what: rectangle
      size: [rp2040_body_width, rp2040_body_height]
      where:
        ref: keyboard_tl
        shift: [-base_width/2+rp2040_body_width/2+m2_outer_distance*2/3, base_height/2-rp2040_body_height/2-1*m2_outer_distance-1.5*m2_head_radius-1]
  _rp2040_usb:
    - what: rectangle
      size: [8, 9.5]
      where:
        ref: keyboard_tl
        shift: [-base_width/2, base_height/2-rp2040_body_height/2-1*m2_outer_distance-1.5*m2_head_radius-1]
  _rp2040: [
    _rp2040_body,
    _rp2040_usb
  ]

  ### connectors to touchpad or between halves
  _connector_hole_tr:
    - what: rectangle
      size: [connector_length, connector_width]
      where:
        ref: keyboard_tl
        shift: [base_width/2-connector_length/2+0.001, base_height/2-connector_width-ky/2]
  _connector_hole_bt:
    - what: rectangle
      size: [connector_width, connector_length]
      where:
        ref: keyboard_tl
        shift: [0, -base_height/2+connector_width-ky/3]
  _connector_holes: [
    _connector_hole_tr,
    _connector_hole_bt
  ]
  
  ### symbol 1
  _symbol_circle_bl:
    - what: circle
      radius: symbols_radius
      where:
        shift: [0, 0]
  _symbol_circle_br:
    - what: circle
      radius: symbols_radius
      where:
        shift: [12, 0]
  _symbol_circle_t:
    - what: circle
      radius: symbols_radius
      where:
        shift: [6, 10.3]
  _symbol_triangle:
    - what: polygon
      points:
        - shift: [0,0]
        - shift: [12, 0]
        - shift: [-6, 10.3]

  symbol:
    - what: outline
      name: _symbol_circle_t
    - what: outline
      name: _symbol_circle_bl
      operation: stack
    - what: outline
      name: _symbol_circle_br
      operation: stack
    - what: outline
      name: _symbol_triangle
      operation: subtract

  ### parts that are used on different layers
  _rubber_bumper_tl:
    - what: circle
      radius: rubber_bumper_radius
      where: 
        shift: [-base_width/2+m2_head_radius+m2_outer_distance+rubber_bumper_radius, base_height/2-m2_head_radius-m2_outer_distance-rubber_bumper_radius]
        ref: keyboard_tl
  _rubber_bumper_tr:
    - what: circle
      radius: rubber_bumper_radius
      where:
        shift: [base_width/2-m2_head_radius-m2_outer_distance-rubber_bumper_radius, base_height/2-m2_head_radius-m2_outer_distance-rubber_bumper_radius]
        ref: keyboard_tl
  _rubber_bumper_bl:
    - what: circle
      radius: rubber_bumper_radius
      where:
        shift: [-base_width/2+m2_head_radius+m2_outer_distance+rubber_bumper_radius, -base_height/2+m2_head_radius+m2_outer_distance+rubber_bumper_radius]
        ref: keyboard_tl
  _rubber_bumper_br:
    - what: circle
      radius: rubber_bumper_radius
      where:
        shift: [base_width/2, -base_height/2+rubber_bumper_radius+1.5]
        ref: keyboard_tl
  _rubber_bumpers: [
    _rubber_bumper_tl,
    _rubber_bumper_tr,
    _rubber_bumper_bl,
    _rubber_bumper_br
  ]

  ### switch plate
  _thumbs:
    - what: rectangle
      size: [3U, 1U]
      corner: 1
      where:
        ref: thumb_reachy
        shift: [-1U, 0]
  _key_holes:
    - what: rectangle
      where: /^matrix_.*|^thumb_.*/
      size: 14
  _key_frame:
    - what: rectangle
      where: 
        ref: matrix_middle_top
      bound: true
      size: 14
      expand: 8

  _raw_plate:
    - what: outline
      name: _base
    - what: outline
      name: _key_frame
      operation: add
      where:
        shift: [0, 1]
  _with_fillets:
    - what: outline
      name: _raw_plate
      fillet: 4

  ### frame around keycaps on top of switchplate
  _switch_caps:
    - what: rectangle
      # operation: stack
      where: /^matrix_.*/
      size: [px, py]
    - what: rectangle
      # operation: stack
      where: /^thumb_.*/
      size: [px, py+10]
  

  _pre_bottom_hollow_0:
    - what: rectangle
      where: /^matrix_.*/
      size: [px-1, py-1]
    - what: rectangle
      size: [60, 40]
      where:
        ref: keyboard_tl
        shift: [-10, 8]
    - what: rectangle
      size: [60, 8]
      where:
        ref: thumb_reachy
        shift: [-35, 3]
    - what: rectangle
      size: [20, 6]
      where:
        ref: matrix_pinky_bottom
        shift: [15, 2]
  _bottom_hollow:
    - what: outline
      name: _pre_bottom_hollow_0
      fillet: 2
      

##########################################
###
###     The actual Layers
###     ordered from bottom to top
###
###     Given conditions:
###     - Each layer is 0.5mm high (thickness of the veneer I bought)
###     - Height of USB-hole: 3mm
###     - Height/width of halves'/mouse connectors holes: 5mm/10mm
###     - M2-Screws and inlets
###     - Kailh choc switches
###     - Keycaps are 17mmx16mm
###     - Keycaps are NOT 18mmx18mm as usual!!
###     - Rubber bumpers are 4mm radius
###
###     TODO:
###     - adjust for unusual keycaps size!
###     - height of holes for halves'/mouse connectors
###     - accurate positioning of loose parts between the holes below the switch plate
###
##########################################

  ## bottom plate consists of three layers: 
  ## 01: the voronoi pattern with big holes for the screw heads and the rubber bumpers
  ## 02: a blank outline (using a different wood) - maybe with space invaders inlay?
  ## 03: the voronoi pattern again so that keys can be closer to the bottom
  ## Layer 01 has larger holes to accomodate the screw heads, the other layers'
  ##   holes are just large enough to the screws can fit through
  ## 
  ## body below the keyplate: 
  ##  to clear the lower part of the keys, it needs to be at least 5mm which is the same
  ##  height as the halves'/mouse connectors.
  ## So that's 10 layers
  ##
  ## switch plate consists of three layers - goal is a total of 1.5mm for the 
  ##    switch plate, and each layer is around 0.5-0.6mm 
  ##    Might house a part of the holes for halves'/mouse connectors?
  ## 10: switch plate with holes for halves'/mouse connectors
  ## 11: switch plate with holes for halves'/mouse connectors
  ## 13: switch plate without any holes - no idea if that's necessary 
  ##      or if we'll add another layer with holes
  ##
  ## body above the keyplate: 
  ##    - to clear the keycaps (7.5 mm above switch plate), 15 layers are needed
  ##    - topmost layer covers the magnets and holds the decorative inlay

  ## bottom plate
  _key_pattern:
    - what: circle
      where: false
      # where: /^matrix_.*|^thumb_.*/
      radius: 01
  layer_01: [
    _with_fillets,
    +_thumbs,
    -_key_pattern,
    -_screw_heads,
    -_rubber_bumpers
  ]
  layer_02: [
    _with_fillets,
    +_thumbs,
    -_screw_holes
  ]
  layer_03: [
    _with_fillets,
    +_thumbs,
    -_key_pattern,
    -_screw_holes
  ]

  ## bottom hollow
  layer_04_to_10: [
    _with_fillets,
    +_thumbs,
    -_key_holes,
    -_bottom_hollow,
    -_rp2040_body,
    -_inlet_holes,
    -_connector_holes
  ]

  # switch plate  
  layer_10: [
    _with_fillets,
    +_thumbs,
    -_key_holes,
    -_rp2040,
    -_inlet_holes,
    -_connector_holes
  ]
  layer_11: [
    _with_fillets,
    +_thumbs,
    -_key_holes,
    -_rp2040,
    -_inlet_holes
  ]
  layer_12: [
    _with_fillets,
    +_thumbs,
    -_key_holes,
    -_rp2040_body,
    -_inlet_holes
  ]

  duality_top_frame: [
    _with_fillets,
    -_rp2040,
    -_switch_caps,
    -_magnet_holes,
  ]

  duality_top_frame_without_usb: [
    _with_fillets,
    -_rp2040_body,
    -_switch_caps,
    -_magnet_holes,
  ]
  

  duality_top_cap:
    - what: outline
      name: _with_fillets
    - what: outline
      name: _switch_caps
      operation: subtract
    - what: outline
      name: symbol
      operation: subtract
      origin: symbol

